// A pangram is a word or sentence that contains every letter of the alphabet.  For example: the quick brown fox jumps over the lazy dog.

Gopal wants to improve his typing speed for programming contests, and he thinks that if he type pangrams, that is best for it. 

Your task is to help Gopal and given a list of strings made of lowercase letters in the range ascii[a-z], determine whether or not they are pangrams.

Complete the function isPangram() below. The function receives an array of strings to test and must return back a string consisting of '1' and '0' where each position represents the results of your test. Use a '1' to represent true, '0' for false.

#include<bits/stdc++.h>
using namespace std;

string isPangram(vector<string> &strings){
  string l ="";
  for(int i=0;i<strings.size();i++)
  {
      int a[26]={0};
    string str = strings[i];
    int f=0;
    for(int j=0;j<str.length();j++)
    {
      if(str[j]!=' ')
      {
        a[str[j]-'a']++;
      }
    }
    for(int m=0;m<26;m++)
    {
      if(a[m]==0)
      {
        f=1;
        break;
      }
    }
    if(f)
    {
      l.push_back('0');
    }
    else{
      l.push_back('1');
    }
  }
  return l;
}

int main(){
  int t;
  cin>>t;
  cin.ignore(numeric_limits<streamsize>::max(),'\n');
  vector<string> strings;
  while(t--){
    string str;
    getline(cin,str);
    strings.push_back(str);
  }
  cout<<isPangram(strings);
  return 0;
}
